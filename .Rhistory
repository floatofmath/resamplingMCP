library(Rcpp)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
nextCombination(1:3,6)
nextCombination(1:3,6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(1:3,6)
nextCombination(nextCombination(1:3,6))
nextCombination(nextCombination(1:3,6),6)
nextCombination(nextCombination(nextCombination(1:3,6),6),5)
seq_len(7)
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
combinationsC(6,3)
combinationsC(6,3)
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
combinationsC(6,3)
choose(6,3)
nextCombination(c(1,5,6),6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(c(1,5,6),6)
nextCombination(c(1,5,6),6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(c(1,5,6),6)
nextCombination(c(1,5,6),6)
nextCombination(c(1,5,6),6)
nextCombination(c(1,5,6),6)
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
nextCombination(c(1,5,6),6)
nextCombination(c(1,5,6),6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(c(1,5,6),6)
nextCombination(c(1,5,6),6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(c(1,5,6),6)
nextCombination(c(4,5,6),6)
nextCombination(c(1,5,6),6)
sourceCpp('src/combinations_cpp.cpp')
nextCombination(c(1,5,6),6)
nextCombination(c(4,5,6),6)
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
nextCombination(c(4,5,6),6)
nextCombination(c(4,5,6),6)
nextCombination(c(3,5,6),6)
combinationsC(6,3)
combinations
gtools::combinations
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/combinations_cpp.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
install.packages('RcppArmadillo')
sourceCpp('src/matrix_stats.cpp')
library(RcppArmadillo)
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
o  <- combinationsC(4,2)
Q
sourceCpp('src/matrix_stats.cpp')
library(Rcpp)
sourceCpp('src/matrix_stats.cpp')
library(resamplingMCP)
o <- omega(rep(0:1,3))
o
g <- rnorm(6)
sumdiffC(g,o)
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
sumdiffC(g,o)
sumdiff(g,o)
microbenchmark(sumdiff(g,o),sumdiffC(g,o))
library(microbenchmark)
microbenchmark(sumdiff(g,o),sumdiffC(g,o))
microbenchmark(sumdiff(g,o),sumdiffC(g,o))
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
microbenchmark(sumdiff(g,o),sumdiffC(g,o))
sumdiffC(g,o)
sourceCpp('src/matrix_stats.cpp')
sourceCpp('src/matrix_stats.cpp')
meandiffC(g,o)
meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp')
meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp')
meandiffC(g,o)
meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp')
meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
sourceCpp('src/matrix_stats.cpp');meandiffC(g,o)
rbind(meandiffC(g,o),meandiff(g,o))
microbenchmark(meandiffC(g,o),meandiff(g,o))
compileAttributes("./")
devtools::document("./")
devtools::document("./")
compileAttributes("./")
devtools::install("./")
devtools::document("./")
devtools::install("./")
out1
out2
out3
q('no')
q('no')
devtools::install('./')
servr::vign(daemon=T)
library(resamplingMCP)
browseVignettes()
q('no')
